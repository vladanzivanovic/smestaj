<?php
/**
 * Created by PhpStorm.
 * User: vlada
 * Date: 5/13/2017
 * Time: 12:22 PM
 */

namespace SiteBundle\Entity;


use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Security\Core\User\UserInterface;

/**
 * @ORM\Table(name="users")
 * @ORM\Entity(repositoryClass="SiteBundle\Repository\UserRepository")
 */
class User implements UserInterface, \Serializable
{
    /**
     * @ORM\Column(name="Id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @ORM\Column(name="Username", type="string", length=25, unique=true, nullable=true)
     */
    private $username;

    /**
     * @var $firstname
     *
     * @ORM\Column(name="FirstName", type="string", length=100, nullable=false)
     */
    private $firstname;

    /**
     * @var $lastname
     *
     * @ORM\Column(name="LastName", type="string", length=100, nullable=false)
     */
    private $lastname;

    /**
     * @var City
     *
     * @ORM\ManyToOne(targetEntity="SiteBundle\Entity\City", inversedBy="Id")
     * @ORM\JoinColumn(name="CityId", referencedColumnName="Id")
     */
    private $cityid;

    /**
     * @var $address
     *
     * @ORM\Column(name="Address", type="string", length=300, nullable=true)
     */
    private $address;

    /**
     * @var $telephone
     *
     * @ORM\Column(name="Telephone", type="string", length=100, nullable=true)
     */
    private $telephone;

    /**
     * @var $mobilephone
     *
     * @ORM\Column(name="MobilePhone", type="string", length=150, nullable=true)
     */
    private $mobilephone;

    /**
     * @ORM\Column(name="Password", type="string", length=64)
     */
    private $password;

    /**
     * @ORM\Column(name="Email", type="string", length=60, unique=true)
     */
    private $email;

    /**
     * @ORM\Column(name="IsActive", type="smallint", options={"default": 0})
     */
    private $isactive;

    /**
     * @ORM\OneToMany(targetEntity="SiteBundle\Entity\Usertorole", mappedBy="userId", cascade={"persist"})
     */
    private $roles;

    /**
     * @ORM\OneToMany(targetEntity="SiteBundle\Entity\Ads", mappedBy="syscreateduserid", cascade={"persist"})
     */
    private $syscreatedads;

    /**
     * @var UserToSocialNetwork
     *
     * @ORM\OneToMany(targetEntity="SiteBundle\Entity\UserToSocialNetwork", mappedBy="Id", cascade={"remove"})
     */
    private $socialid;


    public function __construct()
    {
        $this->isActive = true;
        $this->roles = new ArrayCollection();
        $this->syscreatedads = new ArrayCollection();
        $this->socialid = new ArrayCollection();
    }

    public function getUsername()
    {
        return $this->username;
    }

    public function getSalt()
    {
        // you *may* need a real salt depending on your encoder
        // see section on salt below
        return null;
    }

    public function getPassword()
    {
        return $this->password;
    }

    public function getRoles()
    {
        $roles = [];

        foreach ($this->roles->getIterator() as $role) {
            $roles[] = $role->getRoleId()->getCode();
        }
        return $roles;
    }

    public function eraseCredentials()
    {
    }

    /** @see \Serializable::serialize() */
    public function serialize()
    {
        return serialize(array(
            $this->id,
            $this->username,
            $this->password,
            // see section on salt below
            // $this->salt,
        ));
    }

    /** @see \Serializable::unserialize() */
    public function unserialize($serialized)
    {
        list (
            $this->id,
            $this->username,
            $this->password,
            // see section on salt below
            // $this->salt
            ) = unserialize($serialized);
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set username
     *
     * @param string $username
     *
     * @return User
     */
    public function setUsername($username)
    {
        $this->username = $username;

        return $this;
    }

    /**
     * Set password
     *
     * @param string $password
     *
     * @return User
     */
    public function setPassword($password)
    {
        $this->password = $password;

        return $this;
    }

    /**
     * Set email
     *
     * @param string $email
     *
     * @return User
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Get email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set isActive
     *
     * @param boolean $isActive
     *
     * @return User
     */
    public function setIsActive($isActive)
    {
        $this->isactive = $isActive;

        return $this;
    }

    /**
     * Get isActive
     *
     * @return boolean
     */
    public function getIsActive()
    {
        return $this->isactive;
    }

    /**
     * Set roles
     *
     * @param string $roles
     *
     * @return User
     */
    public function setRoles($roles)
    {
        $this->roles[] = $roles;

        return $this;
    }

    /**
     * Set firstname
     *
     * @param string $firstname
     *
     * @return User
     */
    public function setFirstname($firstname)
    {
        $this->firstname = $firstname;

        return $this;
    }

    /**
     * Get firstname
     *
     * @return string
     */
    public function getFirstname()
    {
        return $this->firstname;
    }

    /**
     * Set lastname
     *
     * @param string $lastname
     *
     * @return User
     */
    public function setLastname($lastname)
    {
        $this->lastname = $lastname;

        return $this;
    }

    /**
     * Get lastname
     *
     * @return string
     */
    public function getLastname()
    {
        return $this->lastname;
    }

    /**
     * Set address
     *
     * @param string $address
     *
     * @return User
     */
    public function setAddress($address)
    {
        $this->address = $address;

        return $this;
    }

    /**
     * Get address
     *
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * Set telephone
     *
     * @param string $telephone
     *
     * @return User
     */
    public function setTelephone($telephone)
    {
        $this->telephone = $telephone;

        return $this;
    }

    /**
     * Get telephone
     *
     * @return string
     */
    public function getTelephone()
    {
        return $this->telephone;
    }

    /**
     * Set mobilephone
     *
     * @param string $mobilephone
     *
     * @return User
     */
    public function setMobilephone($mobilephone)
    {
        $this->mobilephone = $mobilephone;

        return $this;
    }

    /**
     * Get mobilephone
     *
     * @return string
     */
    public function getMobilephone()
    {
        return $this->mobilephone;
    }

    /**
     * Set cityid
     *
     * @param \SiteBundle\Entity\City $cityid
     *
     * @return User
     */
    public function setCityid(\SiteBundle\Entity\City $cityid = null)
    {
        $this->cityid = $cityid;

        return $this;
    }

    /**
     * Get cityid
     *
     * @return \SiteBundle\Entity\City
     */
    public function getCityid()
    {
        return $this->cityid;
    }

    /**
     * Add role
     *
     * @param \SiteBundle\Entity\Usertorole $role
     *
     * @return User
     */
    public function addRole(\SiteBundle\Entity\Usertorole $role)
    {
        $this->roles[] = $role;

        return $this;
    }

    /**
     * Remove role
     *
     * @param \SiteBundle\Entity\Usertorole $role
     */
    public function removeRole(\SiteBundle\Entity\Usertorole $role)
    {
        $this->roles->removeElement($role);
    }

    /**
     * Add syscreatedad
     *
     * @param \SiteBundle\Entity\Ads $syscreatedad
     *
     * @return User
     */
    public function addSyscreatedad(\SiteBundle\Entity\Ads $syscreatedad)
    {
        $this->syscreatedads[] = $syscreatedad;

        return $this;
    }

    /**
     * Remove syscreatedad
     *
     * @param \SiteBundle\Entity\Ads $syscreatedad
     */
    public function removeSyscreatedad(\SiteBundle\Entity\Ads $syscreatedad)
    {
        $this->syscreatedads->removeElement($syscreatedad);
    }

    /**
     * Get syscreatedads
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getSyscreatedads()
    {
        return $this->syscreatedads;
    }

    /**
     * Set socialid
     *
     * @param UserToSocialNetwork $socialid
     *
     * @return User
     */
    public function setSocialid(UserToSocialNetwork $socialid = null)
    {
        $this->socialid = $socialid;

        return $this;
    }

    /**
     * Get socialid
     *
     * @return UserToSocialNetwork
     */
    public function getSocialid()
    {
        return $this->socialid;
    }
}
