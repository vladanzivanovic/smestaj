<?php

namespace SiteBundle\Repository;

use Doctrine\Common\Persistence\ManagerRegistry;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityManagerInterface;
use SiteBundle\Entity\Ads;
use \Doctrine\ORM\EntityRepository;
use SiteBundle\Entity\Adshastags;

/**
 * AdshastagsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
final class AdshastagsRepository extends ExtendedEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Adshastags::class);
    }

    public function deleteByAd(Ads $ads)
    {
        $this->createQueryBuilder('aht')
            ->delete()
            ->where('aht.ads = :ad')
            ->setParameter('ad', $ads)
            ->getQuery()
            ->execute();
    }

    /**
     * @param Ads $ads
     *
     * @return array
     *
     * @deprecated use getByAd instead
     */
    public function getByAds(Ads $ads)
    {
        $query = $this->createQueryBuilder('aht')
            ->select(
                'tag.id as tag_id',
                'tag.name as tag_name',
                'aht.value',
                'tt.id as tag_type_id',
                'tt.label as tag_type_label',
                'tag.icon'
            )
            ->join('aht.tag', 'tag')
            ->join('tag.tagType', 'tt')
            ->where('aht.ads = :ads')
            ->setParameter('ads', $ads)
            ->orderBy('tt.id');

        return $query->getQuery()->getResult();
    }

    /**
     * @param Ads $ads
     *
     * @return array
     */
    public function getByAd(Ads $ads): array
    {
        $query = $this->createQueryBuilder('aht')
            ->where('aht.ads = :ads')
            ->setParameter('ads', $ads);

        return $query->getQuery()->getResult();
    }

    /**
     * @param Ads $ads
     *
     * @return array
     */
    public function getByAdsForGridPage(int $adsId)
    {
        $query = $this->createQueryBuilder('aht')
            ->select(
                'tag.id as tag_id',
                'tag.name as tag_name',
                'aht.value',
                'tt.id as tag_type_id',
                'tt.label as tag_type_label',
                'tag.icon'
            )
            ->join('aht.tag', 'tag')
            ->join('tag.tagType', 'tt')
            ->where('aht.ads = :ads')
            ->andWhere('tag.slug IN (:slugs)')
            ->setParameter('ads', $adsId)
            ->setParameter('slugs', ['parking', 'bazen', 'wifi-internet', 'sopstveno-kupatilo', 'kuhinja'])
            ->orderBy('tt.id');

        return $query->getQuery()->getResult();
    }

    /**
     * @param Ads $ads
     *
     * @return array
     */
    public function getAll()
    {
        $query = $this->createQueryBuilder('aht')
            ->select(
                'tag.id as tag_id',
                'tag.name as tag_name',
                'aht.value',
                'tt.id as tag_type_id',
                'tt.label as tag_type_label',
                'tag.icon'
            )
            ->join('aht.tag', 'tag')
            ->join('tag.tagType', 'tt')
            ->orderBy('tt.id');

        return $query->getQuery()->getResult();
    }
}
